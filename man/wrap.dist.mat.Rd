% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multistep_clustering.R
\name{wrap.dist.mat}
\alias{wrap.dist.mat}
\title{Utility function to adjust Levenshtein distance to
match affinity propagation's assumed similarity metric.}
\usage{
wrap.dist.mat(x)
}
\arguments{
\item{x}{character vector, input values to be clustered}
}
\value{
Levenshtein distance matrix with negated values, ready for 'apclust'
}
\description{
'apclust' assumes the provided distance metric will be a representation
of how similar pairs of values are, whereas 'adist' represents how different
two strings are. This is easily adjusted by negating the 'adist' results,
as 'apclust' is scale free. Note that this distance calculation ignores case
on input queries, which is not ideal but seems to be the most functional solution
for the types of input provided in the training data.
}
\details{
Note also that this could easily be a traditional lambda function, but in this case
making the intention of the function clear is preferable.
}
