% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multistep_clustering.R
\name{run.multistep.clustering}
\alias{run.multistep.clustering}
\title{Get clusters and cluster labels for a given dataset}
\usage{
run.multistep.clustering(df, query, tag, hclust.h)
}
\arguments{
\item{df}{data frame containing aggregated results, and to which clustering results will be appended}

\item{query}{character vector, data to be clustered, of length nrow(df) matching df contents}

\item{tag}{character vector, identifier for this run that will be used in column names
in output}

\item{hclust.h}{parameter passed to 'cutree' representing height of tree at which
to cut and call clusters}
}
\value{
data frame, the input with appended columns 'tag'.search.input
and 'tag'.consensus.label reflecting the input and output of this function execution
}
\description{
This function runs a series of clustering passes to attempt to get clean consensus labels
for similar queries with minor differences. The process is pretty convoluted and may need to
be adapted for larger sample sizes when those become available. For the moment, the function
does an initial hierarchical clustering pass on case-insensitive Levenshtein distance,
and then does an affinity propagation and agglomeration pass to attempt to get consensus labels
for the clusters from the initial hierarchical pass. This is more complicated because the small
cluster sizes in training data cause convergence issues in affinity propagation clustering, so
multiple passes through other methods are used as a workaround. It's also pretty slow, all things
considered, given the small sample size in question.
}
